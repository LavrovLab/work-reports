p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
p<-pam(d,5)
plot(p)
p<-pam(d,6)
plot(p)
clusplot(p)
##############################################################
sim<-simprof(untransposed_datExpr, num.expected=1000, num.simulated=999,
method.cluster="average", method.distance="euclidean",
method.transform="identity", alpha=0.01,
sample.orientation="row", const=0,
silent=TRUE, increment=100,
undef.zero=TRUE, warn.braycurtis=TRUE)
pl.color<-simprof.plot(results = sim)
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
data<-read.csv(file)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
p<-pam(d,5)
plot(p)
p<-pam(d,6)
plot(p)
clusplot(p)
p<-pam(d,3)
plot(p)
clusplot(p)
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
p<-pam(d,5)
plot(p)
p<-pam(d,6)
plot(p)
clusplot(p)
##############################################################
data<-read.csv(file)
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
clusplot(p)
p<-pam(d,2)
plot(p)
clusplot(p)
p<-pam(d,5)
plot(p)
clusplot(p)
data<-read.csv(file)
a<-diana(mat_data, diss=FALSE, metric="euclidean",stand=TRUE)
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
corrgram(cor_human_pearson,  lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "pearson", order="OLO",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human pearson")
#######################################################################################
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
file<-"C:\Users\Viraj\Box Sync\allvall_2.csv"
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_2.csv"
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_2.csv"
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
file<-"C:\Users\Viraj\Box Sync\allvall_2.csv"
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
data<-read.csv(file)
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
file<-"C:\Users\Viraj\Box Sync\allvall_2.csv"
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
corrgram(cor_human_pearson,  lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "pearson", order="OLO",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human pearson")
#######################################################################################
#hiearchial
#agglomerative
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
s
sim<-simprof(untransposed_datExpr, num.expected=1000, num.simulated=999,
method.cluster="average", method.distance="euclidean",
method.transform="identity", alpha=0.01,
sample.orientation="row", const=0,
silent=TRUE, increment=100,
undef.zero=TRUE, warn.braycurtis=TRUE)
pl.color<-simprof.plot(results = sim)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
p<-pam(d,5)
plot(p)
p<-pam(d,6)
plot(p)
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
p<-pam(d,2)
plot(p)
clusplot(p)
p
p<-pam(d,3)
plot(p)
clusplot(p)
p<-pam(d,2)
plot(p)
clusplot(p)
file<-"C:\Users\Viraj\Box Sync\allvall_3.csv"
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
file<-"C:\Users\Viraj\Box Sync\allvall_3.csv"
#####################  RNA SEQ DATA FOR HUMAN##########################################
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_3.csv"
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
corrgram(cor_human_pearson,  lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "pearson", order="OLO",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human pearson")
#######################################################################################
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
#using divisive
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-diana(mat_data, diss=FALSE, metric="euclidean",stand=TRUE)
plot(a)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
d
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
clusplot(p)
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
plot(p)
p<-pam(d,5)
plot(p)
p<-pam(d,6)
plot(p)
p<-pam(d,2)
clusplot(p)
p<-pam(d,3)
clusplot(p)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
file<-"C:\Users\Viraj\Box Sync\allvall_2.csv"
#####################  RNA SEQ DATA FOR HUMAN##########################################
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
corrgram(cor_human_pearson,  lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "pearson", order="OLO",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human pearson")
#######################################################################################
#hiearchial
#agglomerative
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
file<-"C:\Users\Viraj\Box Sync\allvall_2.csv"
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_2.csv"
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
datExpr<-t(untransposed_datExpr)
#take transpose
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
#hiearchial
#agglomerative
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
#using divisive
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
rownames(mat_data) <- rnames
a<-diana(mat_data, diss=FALSE, metric="euclidean",stand=TRUE)
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
plot(a)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
d<-dist(mat_data, method="euclidean")
p<-pam(d,2)
plot(p)
p<-pam(d,3)
plot(p)
p<-pam(d,4)
p<-pam(d,2)
clusplot(p)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
rnames
data
a
a
datExpr
untransposed_datExpr
cor_human_pearson
cor_human_spearman
c
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_3.csv"
#####################  RNA SEQ DATA FOR HUMAN##########################################
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
file<-"C:\\Users\\Viraj\\Box Sync\\allvall_3.csv"
#####################  RNA SEQ DATA FOR HUMAN##########################################
untransposed_datExpr<-read.csv(file,header = TRUE,row.names=1)
#take transpose
datExpr<-t(untransposed_datExpr)
cor_human_spearman<-cor(datExpr, method="spearman")
cor_human_pearson<-cor(datExpr, method="pearson")
corrgram(cor_human_spearman, lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "spearman", order="PCA",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human spearman")
corrgram(cor_human_pearson,  lower.panel=panel.shade,
text.panel=panel.txt, cor.method= "pearson", order="OLO",col.regions = colorRampPalette(c("red","salmon","white")),
main="Human pearson")
#######################################################################################
#hiearchial
#agglomerative
data<-read.csv(file)
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
a<-agnes(mat_data, diss=FALSE, metric="euclidean",stand=TRUE,method="average")
plot(a)
c<-cophenetic(a)
d<-dist(mat_data, method="euclidean")
cor(c,d)
setwd("D:/For Article/makingDB/database flatfiles/placozoa")
library(dplyr)
dat <- read.csv("tadh_table1.csv",header = TRUE)
names(dat)
dat <- read.csv("tadh_table1.csv",header = TRUE)
names(dat)
dat.query1 <- filter(dat,targetp =="M"
)
dat.query1
query1 <- subset(dat, targetp=="M", select=c(proteinid))
query1
query1 <- subset(dat, targetp==M, select=c(proteinid))
query1 <- subset(dat, targetp="M", select=c(proteinid))
query1
summary(query1)
nrow(query1)
query1 <- subset(dat, targetp="-", select=c(proteinid))
query1
query1 <- subset(dat, targetp=="-", select=c(proteinid))
query1
query1 <- subset(dat, targetp=="_", select=c(proteinid))
query1
query1 <- subset(dat, targetp=="m", select=c(proteinid))
query1
query1 <- subset(dat, targetp=="M", select=c(proteinid))
query1
query_1 = subset(dat, targetp=="M", select=c(proteinid))
query1
dat
query_1 = subset(dat, targetp=="M", select=c(proteinid))
query_1
dat <- read.csv("tadh_table1.csv",header = TRUE)
query_1 = subset(dat, dat$targetp=="M", select=c(proteinid))
query1
targetpM <- dat(dat$targetp== M)
targetpM <- dat[dat$targetp== M]
targetpM <- dat[dat$targetp== "M"]
targetpM
dat <- read.csv("tadh_table1.csv",header = TRUE)
dat
names(dat)
tpm <- subset(dat, RC==1)
tmp
tpm
tpm <- subset(dat, RC==1 & targetp==M, select=c(proteinid) )
tpm <- subset(dat, RC==1 & targetp=="M", select=c(proteinid) )
tpm <- subset(dat, RC==1 && targetp=="M", select=c(proteinid))
tpm
tpm <- subset(dat, targetp=="M", select=c(proteinid))
names(tpm)
names(dat)
dat(targetp)
pid=subset(dat,select=c(proteinid))
pid
pid=subset(dat,select=c(targetp))
pid
pid=subset(dat,targetp==M,select=c(targetp))
pid=subset(dat,targetp=M,select=c(targetp))
pid=subset(dat,targetp=="M",select=c(targetp))
pid=subset(dat,targetp=="M ",select=c(targetp))
pid
pid=subset(dat,targetp=="M " && RC==1,select=c(targetp))
pid=subset(dat,targetp=="M " && RC==1 ,select=c(targetp))
pid=subset(dat,targetp=="M " && RC=="1 ",select=c(targetp))
pid=subset(dat,targetp=="M " && RC=="1",select=c(targetp))
pid=subset(dat,targetp=="M " & RC=="1",select=c(targetp))
pid=subset(dat,targetp=="M " & RC=="1",select=c(targetp,RC,proteinid))
pid
ls
names(dat)
RC1seqlength=subset(dat,targetp=="M " & RC=="1",select=c(seqlength))
boxplot(RC1seqlength)
RC2seqlength=subset(dat,targetp=="M " & RC=="2",select=c(seqlength))
boxplot(RC2seqlength)
RC2seqlength=subset(dat,targetp=="M " & RC=="3",select=c(seqlength))
boxplot(RC2seqlength)
total=merge(RC1seqlength,RC2seqlength)
total
boxplot(total)
boxplot(RC1seqlength,RC2seqlength)
boxplot(RC1seqlength,RC2seqlength)
boxplot(RC1seqlength,RC2seqlength)
boxplot(mtcars)
mtcars
mtcars
boxplot(dat)
boxplot(seqlength,data=dat)
boxplot(seqlength, data=dat)
boxplot(seqlength, data=dat)
total=cbind(RC1seqlength,RC2seqlength)
boxplot(seqlength~targetp,data=dat)
boxplot(seqlength~RC,data=dat)
boxplot(seqlength~mitoprot,data=dat)
mitoprot=subset(dat,targetp=="Y ",select=c(seqlength))
mitoprot=subset(dat,targetp=="Y",select=c(seqlength))
mitoprot=subset(dat,mitoprot=="Y")
mitoprot=subset(dat,mitoprot=="Y ")
mitoprot=subset(dat,mitoprot==" Y ")
mitoprot=subset(dat,mitoprot==" Y")
mitoprot=subset(dat,mitoprot=="Y")
mitoprot=subset(dat,mitoprot=="Y",select=c(seqlength))
mitoprot=subset(dat,mitoprot=="Y"
)
mitoprot=subset(targetp=="M ")
mitoprot=subset(dat,targetp=="M")
mitoprot=subset(dat,targetp=="M ")
mitoprot=subset(dat,mitoprot=="Y ")
mitoprot=subset(dat,mitoprot==" Y")
mitoprot=subset(dat,mitoprot=="  Y")
boxplot(seqlength~RC,data=mitoprot)
mitoprot=subset(dat,mitoprot==" Y" & RC==1)
mitoprot=subset(dat,mitoprot==" Y" & RC=1)
mitoprot=subset(dat,mitoprot==" Y" & RC=="1")
mitoprot=subset(dat,mitoprot==" Y" && RC==1)
mitoprot=subset(dat,mitoprot==" Y" & RC==1)
mitoprot=subset(dat,mitoprot==" Y")
mitoprot=subset(dat,mitoprot=="  Y")
mitoprot=subset(dat,mitoprot=="  Y" & Rc==1)
mitoprot=subset(dat,mitoprot=="  Y" & RC==1)
mitoprot=subset(dat,mitoprot=="  Y" & hsap_ortho==" -" & mmus_ortho==" -" &scer_ortho==" -")
mitoprot
ls
onlyTargetP=subset(dat,mitoprot=="  Y" & hsap_ortho==" -" & mmus_ortho==" -" &scer_ortho==" -")
boxplot(onlyTargetP~RC)
boxplot(seqlength~RC,data=onlyTargetP)
boxplot(RC,data=onlyTargetP)
boxplot(proteinid~RC,data=onlyTargetP)
